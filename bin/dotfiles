#!/bin/bash

BIN_NAME=$(basename "$0")
COMMAND_NAME=$1

ARROW="ï¿«"
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NC='\033[0m'

# Get dotfiles dir (so run this script from anywhere)
export DOTFILES_DIR EXTRA_DIR
DOTFILES_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )"

sub_help () {
    echo -e "$ARROW Usage: ${YELLOW}$BIN_NAME <command>${NC}"
    echo
    echo "Commands:"
    echo "   help             This help message"
    echo "   symlinks         Run symlinks script"
}

sub_symlinks () {
    ln -sfv "$DOTFILES_DIR/dots/.gitconfig" ~
    ln -sfv "$DOTFILES_DIR/dots/.gitignore_global" ~
    ln -sfv "$DOTFILES_DIR/dots/.slate" ~
    ln -sfv "$DOTFILES_DIR/dots/.tmux.conf" ~
    ln -sfv "$DOTFILES_DIR/dots/.vimrc" ~

    mkdir -p ~/.config/nvim/
    ln -sfv "$DOTFILES_DIR/dots/.config/nvim/init.vim" ~/.config/nvim/init.vim
    ln -sfv "$DOTFILES_DIR/dots/.zshrc" ~
    ln -sfv "$DOTFILES_DIR/configs/antigen.zsh" ~

    mkdir -p ~/.vim/autoload/
    ln -sfv "$DOTFILES_DIR/configs/plug.vim" ~/.vim/autoload/plug.vim

    mkdir -p ~/.config/powerline/colorschemes/
    mkdir -p ~/.config/powerline/themes/tmux/
    ln -sfv "$DOTFILES_DIR/dots/.config/powerline/colorschemes/default.json" ~/.config/powerline/colorschemes/default.json
    ln -sfv "$DOTFILES_DIR/dots/.config/powerline/themes/tmux/default.json" ~/.config/powerline/themes/tmux/default.json

    mkdir -p ~/.config/kitty/
    ln -sfv "$DOTFILES_DIR/dots/.config/kitty/kitty.conf" ~/.config/kitty/kitty.conf

    echo -e "${GREEN}$ARROW Success! Symlinks command finished.${NC}"
}

sub_tools () {
  # Install Rust
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

  # update $PATH for cargo
  # shellcheck disable=SC1090
  source "$HOME/.zshrc"

  # Install broot
  cargo install broot

  # git might no be here yet...
  # install TPM - tmux plugin manager
  git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm

  brew update
  # Misc tools
  brew install \
    peco \
    yank \
    shellcheck \
    hexyl \
    lynx \
    kubernetes-helm \
    skaffold \
    neovim \
    neofetch \
    asciinema \
    mycli \
    pv \
    bat

  # helm diff plugin
  helm plugin install https://github.com/databus23/helm-diff --version master

  # Fonts!
  brew tap homebrew/cask-fonts
  brew cask install font-firacode-nerd-font-mono

  # Gotop (pointless but fun)
  brew tap cjbassi/gotop
  brew install gotop

  # prebuild binary installs...
  brew cask install google-chrome
  brew cask install mailplane
  brew cask install iterm2

  # Specify the preferences directory
  defaults write com.googlecode.iterm2.plist PrefsCustomFolder -string "$DOTFILES_DIR/iterm2_profile"
  # Tell iTerm2 to use the custom preferences in the directory
  defaults write com.googlecode.iterm2.plist LoadPrefsFromCustomFolder -bool true

  gem install bropages

  pip3 install powerline-status
  pip3 install --user powerline-status psutil
  pip3 install kubernetes # kuberenetes python API

  # install slate window management tool
  cd /Applications && curl http://www.ninjamonkeysoftware.com/slate/versions/slate-latest.tar.gz | tar -xz

  # install Docker for mac...
  PWD=$(pwd)
  cd /tmp || exit 1
  curl -LOC - https://download.docker.com/mac/stable/Docker.dmg
  sudo hdiutil attach Docker.dmg
  cp -r /Volumes/Docker/Docker.app /Applications
  sudo hdiutil detach /Volumes/Docker
  rm Docker.dmg
  cd PWD || exit 1

  # install virtualbox...
  VIRTUAL_BOX="VirtualBox-6.1.0-135406-OSX.dmg"
  curl -LOC - "https://download.virtualbox.org/virtualbox/6.1.0/$VIRTUAL_BOX"
  sudo hdiutil attach "$VIRTUAL_BOX"
  sudo installer -pkg /Volumes/VirtualBox/VirtualBox.pkg -target /
  sudo hdiutil detach /Volumes/VirtualBox
  rm "$VIRTUAL_BOX"

  # install gcloud
  curl https://sdk.cloud.google.com > install.sh
  bash install.sh --disable-prompts

  # install broot
  BROOT="v0.11.4.tar.gz"
  curl -LOC - "https://github.com/Canop/broot/archive/$BROOT"
  tar -zxf "$BROOT"
  cd $BROOT || return

}

# Just set the background to my preferred background image
sub_misc () {
  sqlite3 ~/Library/Application\ Support/Dock/desktoppicture.db "update data set value = '$DOTFILES_DIR/backgrounds/flat-landscape-minimalism-trees-sunset-river-artwork.jpeg'";
  killall Dock;
}

case $COMMAND_NAME in
    "" | "-h" | "--help")
        sub_help
        ;;
    *)
        shift
        sub_"${COMMAND_NAME}" "$@"
        if [ $? = 127 ]; then
            echo -e "${RED}$ARROW Error: '$COMMAND_NAME' is not a known command or has errors.${NC}" >&2
            sub_help
            exit 1
        fi
        ;;
esac
